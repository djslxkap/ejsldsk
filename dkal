-- 罗布乐斯多功能脚本 v2.2
-- 作者: AI助手
-- 功能: 多种游戏功能 + 卡密验证系统 + 优化的显示隐藏功能

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

-- 卡密系统配置
local LicenseSystem = {
    ValidKeys = {
        "ROBLOX2024-PREMIUM-ULTRA",
        "GAMING-SCRIPT-PRO-MAX", 
        "FREE-SCRIPT-VIP-ACCESS",
        "TEST-KEY-1234567890",
        "ADMIN-ACCESS-ROBLOX-PRO"
    },
    
    ActivatedKeys = {},
    KeyExpiry = {},
    MaxActivations = 3
}

-- GUI 界面创建
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MultiScriptGUI_V2"
ScreenGui.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 420, 0, 550)
MainFrame.Position = UDim2.new(0.5, -210, 0.5, -275)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

-- 添加圆角效果
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- 标题栏
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 45)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = TitleBar

-- 标题
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0.7, 0, 1, 0)
Title.Position = UDim2.new(0.05, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "🔧 多功能脚本 v2.2"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16
Title.Font = Enum.Font.GothamBold
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- 控制按钮容器
local ControlButtons = Instance.new("Frame")
ControlButtons.Size = UDim2.new(0.4, 0, 1, 0)
ControlButtons.Position = UDim2.new(0.6, 0, 0, 0)
ControlButtons.BackgroundTransparency = 1
ControlButtons.Parent = TitleBar

-- 最小化按钮
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(0.1, 0, 0.15, 0)
MinimizeButton.Text = "−"
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 184, 77)
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 18
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Parent = ControlButtons

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 6)
MinimizeCorner.Parent = MinimizeButton

-- 隐藏按钮
local HideButton = Instance.new("TextButton")
HideButton.Size = UDim2.new(0, 30, 0, 30)
HideButton.Position = UDim2.new(0.4, 0, 0.15, 0)
HideButton.Text = "◻"
HideButton.BackgroundColor3 = Color3.fromRGB(86, 156, 214)
HideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HideButton.TextSize = 14
HideButton.Parent = ControlButtons

local HideCorner = Instance.new("UICorner")
HideCorner.CornerRadius = UDim.new(0, 6)
HideCorner.Parent = HideButton

-- 关闭按钮
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(0.7, 0, 0.15, 0)
CloseButton.Text = "×"
CloseButton.BackgroundColor3 = Color3.fromRGB(232, 65, 56)
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Parent = ControlButtons

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 6)
CloseCorner.Parent = CloseButton

-- 卡密输入区域
local KeySection = Instance.new("Frame")
KeySection.Size = UDim2.new(0.9, 0, 0, 80)
KeySection.Position = UDim2.new(0.05, 0, 0.1, 45)
KeySection.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
KeySection.Parent = MainFrame

local KeyCorner = Instance.new("UICorner")
KeyCorner.CornerRadius = UDim.new(0, 8)
KeyCorner.Parent = KeySection

-- 卡密输入框
local KeyBox = Instance.new("TextBox")
KeyBox.Size = UDim2.new(0.7, 0, 0, 35)
KeyBox.Position = UDim2.new(0.05, 0, 0.2, 0)
KeyBox.PlaceholderText = "🔑 请输入卡密..."
KeyBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
KeyBox.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
KeyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyBox.TextSize = 14
KeyBox.Font = Enum.Font.Gotham
KeyBox.Parent = KeySection

local KeyBoxCorner = Instance.new("UICorner")
KeyBoxCorner.CornerRadius = UDim.new(0, 6)
KeyBoxCorner.Parent = KeyBox

-- 激活按钮
local ActivateButton = Instance.new("TextButton")
ActivateButton.Size = UDim2.new(0.2, 0, 0, 35)
ActivateButton.Position = UDim2.new(0.77, 0, 0.2, 0)
ActivateButton.Text = "激活"
ActivateButton.BackgroundColor3 = Color3.fromRGB(0, 140, 255)
ActivateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ActivateButton.TextSize = 14
ActivateButton.Font = Enum.Font.GothamBold
ActivateButton.Parent = KeySection

local ActivateCorner = Instance.new("UICorner")
ActivateCorner.CornerRadius = UDim.new(0, 6)
ActivateCorner.Parent = ActivateButton

-- 状态显示
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0.9, 0, 0, 25)
StatusLabel.Position = UDim2.new(0.05, 0, 0.65, 0)
StatusLabel.Text = "📊 状态: 未激活"
StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextSize = 12
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Parent = KeySection

-- 功能按钮框架
local FunctionsFrame = Instance.new("ScrollingFrame")
FunctionsFrame.Size = UDim2.new(0.9, 0, 0, 350)
FunctionsFrame.Position = UDim2.new(0.05, 0, 0.25, 45)
FunctionsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
FunctionsFrame.ScrollBarThickness = 5
FunctionsFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 120)
FunctionsFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
FunctionsFrame.Parent = MainFrame

local FunctionsCorner = Instance.new("UICorner")
FunctionsCorner.CornerRadius = UDim.new(0, 8)
FunctionsCorner.Parent = FunctionsFrame

-- 迷你控制栏 (隐藏时显示)
local MiniControl = Instance.new("Frame")
MiniControl.Size = UDim2.new(0, 180, 0, 45)
MiniControl.Position = UDim2.new(0, 10, 0, 10)
MiniControl.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
MiniControl.BorderSizePixel = 0
MiniControl.Active = true
MiniControl.Draggable = true
MiniControl.Visible = false
MiniControl.Parent = ScreenGui

local MiniCorner = Instance.new("UICorner")
MiniCorner.CornerRadius = UDim.new(0, 8)
MiniCorner.Parent = MiniControl

local MiniTitle = Instance.new("TextLabel")
MiniTitle.Size = UDim2.new(0.5, 0, 1, 0)
MiniTitle.Position = UDim2.new(0.05, 0, 0, 0)
MiniTitle.BackgroundTransparency = 1
MiniTitle.Text = "🔧 脚本控制"
MiniTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
MiniTitle.TextSize = 12
MiniTitle.Font = Enum.Font.Gotham
MiniTitle.TextXAlignment = Enum.TextXAlignment.Left
MiniTitle.Parent = MiniControl

local ShowButton = Instance.new("TextButton")
ShowButton.Size = UDim2.new(0, 30, 0, 30)
ShowButton.Position = UDim2.new(0.55, 0, 0.15, 0)
ShowButton.Text = "□"
ShowButton.BackgroundColor3 = Color3.fromRGB(86, 156, 214)
ShowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ShowButton.TextSize = 12
ShowButton.Parent = MiniControl

local ShowCorner = Instance.new("UICorner")
ShowCorner.CornerRadius = UDim.new(0, 6)
ShowCorner.Parent = ShowButton

local CloseMiniButton = Instance.new("TextButton")
CloseMiniButton.Size = UDim2.new(0, 30, 0, 30)
CloseMiniButton.Position = UDim2.new(0.75, 0, 0.15, 0)
CloseMiniButton.Text = "×"
CloseMiniButton.BackgroundColor3 = Color3.fromRGB(232, 65, 56)
CloseMiniButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseMiniButton.TextSize = 14
CloseMiniButton.Font = Enum.Font.GothamBold
CloseMiniButton.Parent = MiniControl

local CloseMiniCorner = Instance.new("UICorner")
CloseMiniCorner.CornerRadius = UDim.new(0, 6)
CloseMiniCorner.Parent = CloseMiniButton

-- 优化的界面状态管理
local UIManager = {
    IsMinimized = false,
    IsHidden = false,
    IsAnimating = false,
    
    -- 动画效果
    Tween = function(object, properties, duration)
        local tweenInfo = TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(object, tweenInfo, properties)
        tween:Play()
        return tween
    end,
    
    -- 最小化功能
    Minimize = function()
        if UIManager.IsAnimating then return end
        UIManager.IsAnimating = true
        
        UIManager.Tween(MainFrame, {Size = UDim2.new(0, 420, 0, 45)}, 0.3)
        
        -- 延迟隐藏内容
        delay(0.2, function()
            FunctionsFrame.Visible = false
            KeySection.Visible = false
            UIManager.IsMinimized = true
            UIManager.IsAnimating = false
            MinimizeButton.Text = "＋"
        end)
    end,
    
    -- 还原功能
    Restore = function()
        if UIManager.IsAnimating then return end
        UIManager.IsAnimating = true
        
        UIManager.Tween(MainFrame, {Size = UDim2.new(0, 420, 0, 550)}, 0.3)
        
        -- 延迟显示内容
        delay(0.2, function()
            FunctionsFrame.Visible = true
            KeySection.Visible = true
            UIManager.IsMinimized = false
            UIManager.IsAnimating = false
            MinimizeButton.Text = "−"
        end)
    end,
    
    -- 隐藏到迷你控制栏
    Hide = function()
        if UIManager.IsAnimating then return end
        UIManager.IsAnimating = true
        
        -- 淡出动画
        UIManager.Tween(MainFrame, {BackgroundTransparency = 1}, 0.2)
        
        delay(0.2, function()
            MainFrame.Visible = false
            MiniControl.Visible = true
            UIManager.IsHidden = true
            UIManager.IsAnimating = false
            HideButton.Text = "◻"
        end)
    end,
    
    -- 从迷你控制栏显示
    Show = function()
        if UIManager.IsAnimating then return end
        UIManager.IsAnimating = true
        
        MainFrame.Visible = true
        MainFrame.BackgroundTransparency = 1
        
        -- 淡入动画
        UIManager.Tween(MainFrame, {BackgroundTransparency = 0}, 0.2)
        
        delay(0.2, function()
            MiniControl.Visible = false
            UIManager.IsHidden = false
            UIManager.IsAnimating = false
            HideButton.Text = "◻"
        end)
    end,
    
    -- 切换最小化/还原
    ToggleMinimize = function()
        if UIManager.IsMinimized then
            UIManager.Restore()
        else
            UIManager.Minimize()
        end
    end,
    
    -- 切换显示/隐藏
    ToggleHide = function()
        if UIManager.IsHidden then
            UIManager.Show()
        else
            UIManager.Hide()
        end
    end,
    
    -- 快速闪烁效果（用于提示）
    Flash = function()
        if MainFrame.Visible then
            local originalColor = MainFrame.BackgroundColor3
            UIManager.Tween(MainFrame, {BackgroundColor3 = Color3.fromRGB(60, 60, 80)}, 0.1)
            delay(0.1, function()
                UIManager.Tween(MainFrame, {BackgroundColor3 = originalColor}, 0.1)
            end)
        end
    end
}

-- 脚本功能类（保持不变）
local ScriptFunctions = {
    Activated = false,
    
    Fly = function()
        -- 飞行功能实现
    end,
    
    Noclip = function()
        -- 穿墙功能实现
    end,
    
    -- 其他功能...
}

-- 创建功能按钮（保持不变）
local function CreateFunctionButton(name, description, func, yPosition)
    -- 按钮创建逻辑
end

-- 按钮事件绑定（优化版）
ActivateButton.MouseButton1Click:Connect(function()
    -- 激活逻辑
end)

-- 优化的按钮交互
local function SetupButtonHoverEffects()
    local buttons = {MinimizeButton, HideButton, CloseButton, ActivateButton, ShowButton, CloseMiniButton}
    
    for _, button in pairs(buttons) do
        button.MouseEnter:Connect(function()
            if not UIManager.IsAnimating then
                UIManager.Tween(button, {Size = UDim2.new(0, 32, 0, 32)}, 0.1)
            end
        end)
        
        button.MouseLeave:Connect(function()
            if not UIManager.IsAnimating then
                UIManager.Tween(button, {Size = UDim2.new(0, 30, 0, 30)}, 0.1)
            end
        end)
    end
end

-- 控制按钮事件
MinimizeButton.MouseButton1Click:Connect(function()
    UIManager.ToggleMinimize()
    UIManager.Flash() -- 添加视觉反馈
end)

HideButton.MouseButton1Click:Connect(function()
    UIManager.ToggleHide()
    UIManager.Flash()
end)

CloseButton.MouseButton1Click:Connect(function()
    UIManager.Tween(MainFrame, {Size = UDim2.new(0, 0, 0, 0)}, 0.3)
    delay(0.3, function()
        ScreenGui:Destroy()
    end)
end)

ShowButton.MouseButton1Click:Connect(function()
    UIManager.Show()
    UIManager.Flash()
end)

CloseMiniButton.MouseButton1Click:Connect(function()
    UIManager.Tween(MiniControl, {Size = UDim2.new(0, 0, 0, 0)}, 0.3)
    delay(0.3, function()
        ScreenGui:Destroy()
    end)
end)

-- 优化的键盘快捷键
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    
    if input.KeyCode == Enum.KeyCode.RightShift then
        UIManager.ToggleHide()
        UIManager.Flash()
    elseif input.KeyCode == Enum.KeyCode.LeftShift then
        UIManager.ToggleMinimize()
        UIManager.Flash()
    elseif input.KeyCode == Enum.KeyCode.F1 then
        if MainFrame.Visible then
            UIManager.Hide()
        else
            UIManager.Show()
        end
        UIManager.Flash()
    elseif input.KeyCode == Enum.KeyCode.F2 then
        -- 快速显示/隐藏切换
        if UIManager.IsHidden or not MainFrame.Visible then
            UIManager.Show()
            UIManager.Restore()
        else
            UIManager.Hide()
        end
        UIManager.Flash()
    end
end)

-- 双击标题栏最小化/还原
local lastClickTime = 0
TitleBar.MouseButton1Click:Connect(function()
    local currentTime = tick()
    if currentTime - lastClickTime < 0.3 then -- 双击检测
        UIManager.ToggleMinimize()
        UIManager.Flash()
    end
    lastClickTime = currentTime
end)

-- 初始化设置
SetupButtonHoverEffects()

print("🎮 多功能脚本 v2.2 已加载!")
print("=== 优化的控制功能 ===")
print("🖱️ 鼠标控制:")
print(" - 标题栏双击: 最小化/还原")
print(" - 按钮悬停: 动态效果")
print("⌨️ 键盘快捷键:")
print(" - RightShift: 显示/隐藏界面")
print(" - LeftShift: 最小化/还原") 
print(" - F1: 快速切换显示")
print(" - F2: 智能显示/隐藏")

-- 添加启动动画
MainFrame.Size = UDim2.new(0, 0, 0, 0)
MainFrame.Visible = true
UIManager.Tween(MainFrame, {Size = UDim2.new(0, 420, 0, 550)}, 0.5)
