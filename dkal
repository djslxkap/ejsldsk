<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>飞行控制面板</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Microsoft YaHei', sans-serif;
        }
        
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
            padding: 20px;
        }
        
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 600px;
        }
        
        .control-panel {
            display: grid;
            grid-template-columns: 1fr 1fr 1.5fr;
            grid-template-rows: auto 1fr;
            gap: 2px;
            width: 100%;
            background: #000;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            margin-bottom: 20px;
            border: 2px solid #000;
        }
        
        .panel-title {
            grid-column: 1 / -1;
            text-align: center;
            background: #333;
            color: white;
            padding: 15px;
            font-size: 24px;
            font-weight: 600;
        }
        
        .control-cell {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 120px;
            border: none;
            font-size: 24px;
            font-weight: bold;
            color: #000;
            cursor: pointer;
            transition: all 0.2s ease;
            padding: 10px;
        }
        
        .control-cell:hover {
            filter: brightness(1.1);
            transform: translateY(-2px);
        }
        
        .control-cell:active {
            transform: translateY(0);
        }
        
        /* 单元格颜色定义 - 与图片完全一致 */
        .cell-up {
            background-color: #4CAF50; /* 绿色 */
        }
        
        .cell-plus {
            background-color: #81D4FA; /* 浅蓝色 */
        }
        
        .cell-fly1 {
            background-color: #E91E63; /* 粉紫色 */
        }
        
        .cell-down {
            background-color: #FFF59D; /* 浅黄色 */
        }
        
        .cell-minus {
            background-color: #81D4FA; /* 浅蓝色 */
        }
        
        .cell-one {
            background-color: #FF9800; /* 橙色 */
        }
        
        .cell-fly2 {
            background-color: #FFF59D; /* 浅黄色 */
        }
        
        .status-display {
            width: 100%;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            color: #333;
            font-size: 20px;
            min-height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }
        
        .status-active {
            background: #4CAF50;
            color: white;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.02); }
            100% { transform: scale(1); }
        }
        
        .info-text {
            color: white;
            text-align: center;
            margin-top: 15px;
            font-size: 14px;
            opacity: 0.8;
        }
        
        @media (max-width: 500px) {
            .control-cell {
                font-size: 20px;
                min-height: 100px;
            }
            
            .panel-title {
                font-size: 20px;
            }
            
            .status-display {
                font-size: 18px;
                padding: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="control-panel">
            <div class="panel-title">飞行控制面板</div>
            
            <!-- 第一行单元格 -->
            <div class="control-cell cell-up" onclick="controlAction('向上')">
                <span>向上</span>
            </div>
            
            <div class="control-cell cell-plus" onclick="controlAction('+')">
                <span>+</span>
            </div>
            
            <div class="control-cell cell-fly1" onclick="startFlying()">
                <span>飞行</span>
            </div>
            
            <!-- 第二行单元格 -->
            <div class="control-cell cell-down" onclick="controlAction('下降')">
                <span>下降</span>
            </div>
            
            <div class="control-cell cell-minus" onclick="controlAction('-')">
                <span>-</span>
            </div>
            
            <div class="control-cell cell-one" onclick="controlAction('1')">
                <span>1</span>
            </div>
            
            <div class="control-cell cell-fly2" onclick="controlAction('下降飞行')">
                <span>飞行</span>
            </div>
        </div>
        
        <!-- 状态显示区域 -->
        <div class="status-display" id="status">
            点击"飞行"单元格启动飞行模式
        </div>
        
        <div class="info-text">
            提示：点击上方单元格执行相应操作
        </div>
    </div>

    <script>
        let isFlying = false;
        let flightMode = 1; // 1表示向上飞行，2表示下降飞行
        
        function startFlying() {
            const statusElement = document.getElementById('status');
            isFlying = !isFlying; // 切换飞行状态
            
            if (isFlying) {
                statusElement.textContent = "已启动飞行 - 当前模式：" + (flightMode === 1 ? "向上飞行" : "下降飞行");
                statusElement.classList.add('status-active');
            } else {
                statusElement.textContent = "飞行已关闭";
                statusElement.classList.remove('status-active');
                setTimeout(() => {
                    statusElement.textContent = "点击'飞行'单元格启动飞行模式";
                }, 2000);
            }
        }
        
        function controlAction(action) {
            const statusElement = document.getElementById('status');
            
            // 根据不同的动作显示不同的状态信息
            switch(action) {
                case '向上':
                    flightMode = 1;
                    if (isFlying) {
                        statusElement.textContent = "已切换到向上飞行模式";
                    } else {
                        statusElement.textContent = "向上飞行模式已选择，请启动飞行";
                    }
                    break;
                case '+':
                    if (isFlying) {
                        statusElement.textContent = flightMode === 1 ? 
                            "增加飞行高度/速度 - 向上飞行" : 
                            "增加飞行能量 - 下降飞行";
                    } else {
                        statusElement.textContent = "请先启动飞行模式";
                    }
                    break;
                case '下降':
                    flightMode = 2;
                    if (isFlying) {
                        statusElement.textContent = "已切换到下降飞行模式";
                    } else {
                        statusElement.textContent = "下降飞行模式已选择，请启动飞行";
                    }
                    break;
                case '-':
                    if (isFlying) {
                        statusElement.textContent = flightMode === 1 ? 
                            "减少飞行高度/速度 - 向上飞行" : 
                            "减少飞行能量 - 下降飞行";
                    } else {
                        statusElement.textContent = "请先启动飞行模式";
                    }
                    break;
                case '1':
                    if (isFlying) {
                        statusElement.textContent = "执行1号操作 - 切换到预设模式1";
                    } else {
                        statusElement.textContent = "请先启动飞行模式";
                    }
                    break;
                case '下降飞行':
                    flightMode = 2;
                    if (isFlying) {
                        statusElement.textContent = "已切换到下降飞行模式";
                    } else {
                        statusElement.textContent = "下降飞行模式已选择，请启动飞行";
                    }
                    break;
            }
            
            // 更新飞行状态显示
            if (isFlying) {
                setTimeout(() => {
                    statusElement.textContent = "已启动飞行 - 当前模式：" + (flightMode === 1 ? "向上飞行" : "下降飞行");
                }, 3000);
            }
        }
        
        // 添加键盘快捷键支持
        document.addEventListener('keydown', function(event) {
            const keyActions = {
                'ArrowUp': '向上',
                '+': '+',
                'f': '飞行',
                'ArrowDown': '下降',
                '-': '-',
                '1': '1',
                'd': '下降飞行'
            };
            
            if (keyActions[event.key] === '飞行') {
                startFlying();
            } else if (keyActions[event.key]) {
                controlAction(keyActions[event.key]);
            }
        });
    </script>
</body>
</html>
